components:
  schemas:
    EmployeeDto:
      type: object
      required:
        - Id
        - FirstName
        - LastName
      properties:
        Id:
          type: integer
          format: int32
        FirstName:
          type: string
        LastName:
          type: string
        tag:
          type: string
    RestError:
      type: object
      required:
        - Message
        - Code
      properties:
        Message:
          type: string
        Code:
          type: integer
          format: int32
paths:
  /employees/{employeeId}:
    get:
      summary: information of specific employee
      operationId: getEmployeeById
      parameters:
        - name: employeeId
          in: path
          schema:
            type: integer
            format: int32
            minimum: 1
            example: 1
    responses:
      200:
        description: employee detail for this version of the response.
        headers:
          ETag:
            description: An ID for this version of the response
            schema:
              type: string
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDto'
      400:
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestError'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestError'
      500:
        description: Server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestError'

info:
openapi: '4.3.1'